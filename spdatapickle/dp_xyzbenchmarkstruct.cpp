/* dp_xyzbenchmarkstruct.cpp
   Generated by spxml2struct from F:\backup\spdatapickle\spdatapickle\benchmark.xml

   !!! DO NOT EDIT !!!

*/

#include <stdio.h>

#include "dp_xyzbenchmarkstruct.hpp"

#include "spdatapickle/spdplib.hpp"

static SP_DPMetaField_t gMetaXYZSpeedMessage1SubMessage [] = {
	{ sizeof(SP_DPMetaField_t), 1, "field1",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField1), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 2, "field2",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField2), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 3, "field3",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField3), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 15, "field15",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField15), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 12, "field12",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField12), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 13, "field13",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField13), eTypeSPDPInt64, 0, 0, 0,
		"", sizeof(int64_t), sizeof(int64_t), 0 },
	{ sizeof(SP_DPMetaField_t), 14, "field14",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField14), eTypeSPDPInt64, 0, 0, 0,
		"", sizeof(int64_t), sizeof(int64_t), 0 },
	{ sizeof(SP_DPMetaField_t), 16, "field16",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField16), eTypeSPDPInt64, 0, 0, 0,
		"", sizeof(int64_t), sizeof(int64_t), 0 },
	{ sizeof(SP_DPMetaField_t), 19, "field19",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField19), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 20, "field20",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField20), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 28, "field28",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField28), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 22, "field22",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField22), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 23, "field23",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField23), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 206, "field206",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField206), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 204, "field204",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField204), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 205, "field205",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField205), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 207, "field207",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField207), eTypeSPDPUint64, 0, 0, 0,
		"", sizeof(uint64_t), sizeof(uint64_t), 0 },
	{ sizeof(SP_DPMetaField_t), 300, "field300",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1SubMessage_t, mField300), eTypeSPDPUint64, 0, 0, 0,
		"", sizeof(uint64_t), sizeof(uint64_t), 0 }
};

static SP_DPMetaField_t gMetaXYZSpeedMessage1 [] = {
	{ sizeof(SP_DPMetaField_t), 1, "field1",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField1), eTypeSPDPChar, 1, 1, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 9, "field9",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField9), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 18, "field18",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField18), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 80, "field80",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField80), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 81, "field81",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField81), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 2, "field2",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField2), eTypeSPDPInt32, 0, 1, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 3, "field3",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField3), eTypeSPDPInt32, 0, 1, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 280, "field280",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField280), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 6, "field6",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField6), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 22, "field22",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField22), eTypeSPDPInt64, 0, 0, 0,
		"", sizeof(int64_t), sizeof(int64_t), 0 },
	{ sizeof(SP_DPMetaField_t), 4, "field4",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField4), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 59, "field59",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField59), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 7, "field7",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField7), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 16, "field16",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField16), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 130, "field130",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField130), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 12, "field12",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField12), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 17, "field17",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField17), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 13, "field13",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField13), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 14, "field14",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField14), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 104, "field104",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField104), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 100, "field100",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField100), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 101, "field101",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField101), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 102, "field102",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField102), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 103, "field103",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField103), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 29, "field29",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField29), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 30, "field30",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField30), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 60, "field60",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField60), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 271, "field271",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField271), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 272, "field272",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField272), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 150, "field150",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField150), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 23, "field23",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField23), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 24, "field24",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField24), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 25, "field25",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField25), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 15, "field15",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField15), eTypeXYZSpeedMessage1SubMessage, 0, 0, 0,
		"", sizeof(XYZSpeedMessage1SubMessage_t), sizeof(XYZSpeedMessage1SubMessage_t), 0 },
	{ sizeof(SP_DPMetaField_t), 78, "field78",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField78), eTypeSPDPChar, 0, 0, 0,
		"", sizeof(char), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 67, "field67",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField67), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 68, "field68",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField68), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 128, "field128",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField128), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 129, "field129",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField129), eTypeSPDPChar, 1, 0, 0,
		"", sizeof(char *), sizeof(char), 0 },
	{ sizeof(SP_DPMetaField_t), 131, "field131",
		SP_DP_FIELD_OFFSET(XYZSpeedMessage1_t, mField131), eTypeSPDPInt32, 0, 0, 0,
		"", sizeof(int32_t), sizeof(int32_t), 0 }
};

static SP_DPMetaField_t gMetaXYZBuiltinMix [] = {
	{ sizeof(SP_DPMetaField_t), 1, "Char",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mChar), eTypeSP_DPChar, 0, 1, 0,
		"", sizeof(SP_DPChar_t), sizeof(SP_DPChar_t), 0 },
	{ sizeof(SP_DPMetaField_t), 2, "Int16",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mInt16), eTypeSP_DPInt16, 0, 1, 0,
		"", sizeof(SP_DPInt16_t), sizeof(SP_DPInt16_t), 0 },
	{ sizeof(SP_DPMetaField_t), 3, "UInt16",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mUInt16), eTypeSP_DPUInt16, 0, 1, 0,
		"", sizeof(SP_DPUInt16_t), sizeof(SP_DPUInt16_t), 0 },
	{ sizeof(SP_DPMetaField_t), 4, "Int32",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mInt32), eTypeSP_DPInt32, 0, 1, 0,
		"", sizeof(SP_DPInt32_t), sizeof(SP_DPInt32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 5, "UInt32",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mUInt32), eTypeSP_DPUInt32, 0, 1, 0,
		"", sizeof(SP_DPUInt32_t), sizeof(SP_DPUInt32_t), 0 },
	{ sizeof(SP_DPMetaField_t), 6, "Int64",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mInt64), eTypeSP_DPInt64, 0, 1, 0,
		"", sizeof(SP_DPInt64_t), sizeof(SP_DPInt64_t), 0 },
	{ sizeof(SP_DPMetaField_t), 7, "UInt64",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mUInt64), eTypeSP_DPUInt64, 0, 1, 0,
		"", sizeof(SP_DPUInt64_t), sizeof(SP_DPUInt64_t), 0 },
	{ sizeof(SP_DPMetaField_t), 8, "Float",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mFloat), eTypeSP_DPFloat, 0, 1, 0,
		"", sizeof(SP_DPFloat_t), sizeof(SP_DPFloat_t), 0 },
	{ sizeof(SP_DPMetaField_t), 9, "Double",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mDouble), eTypeSP_DPDouble, 0, 1, 0,
		"", sizeof(SP_DPDouble_t), sizeof(SP_DPDouble_t), 0 },
	{ sizeof(SP_DPMetaField_t), 10, "String",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mString), eTypeSP_DPString, 0, 1, 0,
		"", sizeof(SP_DPString_t), sizeof(SP_DPString_t), 0 },
	{ sizeof(SP_DPMetaField_t), 11, "Buffer",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mBuffer), eTypeSP_DPBuffer, 0, 1, 0,
		"", sizeof(SP_DPBuffer_t), sizeof(SP_DPBuffer_t), 0 },
	{ sizeof(SP_DPMetaField_t), 12, "StringList",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mStringList), eTypeSP_DPStringList, 0, 1, 0,
		"", sizeof(SP_DPStringList_t), sizeof(SP_DPStringList_t), 0 },
	{ sizeof(SP_DPMetaField_t), 13, "Int32List",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mInt32List), eTypeSP_DPInt32List, 0, 1, 0,
		"", sizeof(SP_DPInt32List_t), sizeof(SP_DPInt32List_t), 0 },
	{ sizeof(SP_DPMetaField_t), 14, "UInt32List",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mUInt32List), eTypeSP_DPUInt32List, 0, 1, 0,
		"", sizeof(SP_DPUInt32List_t), sizeof(SP_DPUInt32List_t), 0 },
	{ sizeof(SP_DPMetaField_t), 15, "Int64List",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mInt64List), eTypeSP_DPInt64List, 0, 1, 0,
		"", sizeof(SP_DPInt64List_t), sizeof(SP_DPInt64List_t), 0 },
	{ sizeof(SP_DPMetaField_t), 16, "UInt64List",
		SP_DP_FIELD_OFFSET(XYZBuiltinMix_t, mUInt64List), eTypeSP_DPUInt64List, 0, 1, 0,
		"", sizeof(SP_DPUInt64List_t), sizeof(SP_DPUInt64List_t), 0 }
};

static SP_DPMetaStruct_t gMetaXYZStructList [] = {
	{ sizeof( SP_DPMetaStruct_t ), eTypeXYZSpeedMessage1SubMessage, "SpeedMessage1SubMessage", sizeof(XYZSpeedMessage1SubMessage_t),
		SP_DP_ARRAY_SIZE(gMetaXYZSpeedMessage1SubMessage), gMetaXYZSpeedMessage1SubMessage },
	{ sizeof( SP_DPMetaStruct_t ), eTypeXYZSpeedMessage1, "SpeedMessage1", sizeof(XYZSpeedMessage1_t),
		SP_DP_ARRAY_SIZE(gMetaXYZSpeedMessage1), gMetaXYZSpeedMessage1 },
	{ sizeof( SP_DPMetaStruct_t ), eTypeXYZBuiltinMix, "BuiltinMix", sizeof(XYZBuiltinMix_t),
		SP_DP_ARRAY_SIZE(gMetaXYZBuiltinMix), gMetaXYZBuiltinMix },
	gSP_DPBuiltinMetaInfo->mStructList[0],
	gSP_DPBuiltinMetaInfo->mStructList[1],
	gSP_DPBuiltinMetaInfo->mStructList[2],
	gSP_DPBuiltinMetaInfo->mStructList[3],
	gSP_DPBuiltinMetaInfo->mStructList[4],
	gSP_DPBuiltinMetaInfo->mStructList[5],
	gSP_DPBuiltinMetaInfo->mStructList[6],
	gSP_DPBuiltinMetaInfo->mStructList[7],
	gSP_DPBuiltinMetaInfo->mStructList[8],
	gSP_DPBuiltinMetaInfo->mStructList[9],
	gSP_DPBuiltinMetaInfo->mStructList[10],
	gSP_DPBuiltinMetaInfo->mStructList[11],
	gSP_DPBuiltinMetaInfo->mStructList[12],
	gSP_DPBuiltinMetaInfo->mStructList[13],
	gSP_DPBuiltinMetaInfo->mStructList[14],
	gSP_DPBuiltinMetaInfo->mStructList[15],
	gSP_DPBuiltinMetaInfo->mStructList[16]
};

static SP_DPMetaInfo_t gMetaXYZBenchmark = {
	sizeof( SP_DPMetaInfo_t ), "XYZ", "benchmark", SP_DP_ARRAY_SIZE(gMetaXYZStructList), gMetaXYZStructList
};

SP_DPMetaInfo_t * gXYZBenchmarkMetaInfo = &gMetaXYZBenchmark;

XYZBenchmarkPickle :: XYZBenchmarkPickle( int pickleType )
{
	mImpl = NULL;
	if( SP_DataPickle::eXml == pickleType ) {
		mImpl = new SP_XmlPickle( gXYZBenchmarkMetaInfo );
	} else if( SP_DataPickle::eXmlRpc == pickleType ) {
		mImpl = new SP_XmlRpcPickle( gXYZBenchmarkMetaInfo );
	} else if( SP_DataPickle::eJson == pickleType ) {
		mImpl = new SP_JsonPickle( gXYZBenchmarkMetaInfo );
	} else if( SP_DataPickle::eProtoBuf == pickleType ) {
		mImpl = new SP_ProtoBufPickle( gXYZBenchmarkMetaInfo );
	}
}
XYZBenchmarkPickle :: ~XYZBenchmarkPickle()
{
	if( NULL != mImpl ) delete mImpl, mImpl = NULL;
}

int XYZBenchmarkPickle :: pickle( XYZSpeedMessage1SubMessage_t * structure, SP_XmlStringBuffer * buffer )
{
	if( NULL == mImpl ) return -1;
	return mImpl->pickle( structure, sizeof( XYZSpeedMessage1SubMessage_t ),
		eTypeXYZSpeedMessage1SubMessage, buffer );
}

int XYZBenchmarkPickle :: unpickle( SP_XmlStringBuffer * buffer, XYZSpeedMessage1SubMessage_t * structure )
{
	if( NULL == mImpl ) return -1;
	return mImpl->unpickle( buffer->getBuffer(), buffer->getSize(),
		eTypeXYZSpeedMessage1SubMessage, structure, sizeof( XYZSpeedMessage1SubMessage_t ) );
}

int XYZBenchmarkPickle :: pickle( XYZSpeedMessage1_t * structure, SP_XmlStringBuffer * buffer )
{
	if( NULL == mImpl ) return -1;
	return mImpl->pickle( structure, sizeof( XYZSpeedMessage1_t ),
		eTypeXYZSpeedMessage1, buffer );
}

int XYZBenchmarkPickle :: unpickle( SP_XmlStringBuffer * buffer, XYZSpeedMessage1_t * structure )
{
	if( NULL == mImpl ) return -1;
	return mImpl->unpickle( buffer->getBuffer(), buffer->getSize(),
		eTypeXYZSpeedMessage1, structure, sizeof( XYZSpeedMessage1_t ) );
}

int XYZBenchmarkPickle :: pickle( XYZBuiltinMix_t * structure, SP_XmlStringBuffer * buffer )
{
	if( NULL == mImpl ) return -1;
	return mImpl->pickle( structure, sizeof( XYZBuiltinMix_t ),
		eTypeXYZBuiltinMix, buffer );
}

int XYZBenchmarkPickle :: unpickle( SP_XmlStringBuffer * buffer, XYZBuiltinMix_t * structure )
{
	if( NULL == mImpl ) return -1;
	return mImpl->unpickle( buffer->getBuffer(), buffer->getSize(),
		eTypeXYZBuiltinMix, structure, sizeof( XYZBuiltinMix_t ) );
}


int XYZBenchmarkPickle :: freeFields( XYZSpeedMessage1SubMessage_t & structure )
{
	SP_DPAlloc alloc( gXYZBenchmarkMetaInfo );
	return alloc.free( &structure, sizeof( structure ), eTypeXYZSpeedMessage1SubMessage );
}

int XYZBenchmarkPickle :: deepCopy( const XYZSpeedMessage1SubMessage_t * src, XYZSpeedMessage1SubMessage_t * dest )
{
	SP_DPAlloc alloc( gXYZBenchmarkMetaInfo );
	return alloc.deepCopy( src, sizeof( *src ), eTypeXYZSpeedMessage1SubMessage, dest, sizeof( *dest ) );
}

int XYZBenchmarkPickle :: freeFields( XYZSpeedMessage1_t & structure )
{
	SP_DPAlloc alloc( gXYZBenchmarkMetaInfo );
	return alloc.free( &structure, sizeof( structure ), eTypeXYZSpeedMessage1 );
}

int XYZBenchmarkPickle :: deepCopy( const XYZSpeedMessage1_t * src, XYZSpeedMessage1_t * dest )
{
	SP_DPAlloc alloc( gXYZBenchmarkMetaInfo );
	return alloc.deepCopy( src, sizeof( *src ), eTypeXYZSpeedMessage1, dest, sizeof( *dest ) );
}

int XYZBenchmarkPickle :: freeFields( XYZBuiltinMix_t & structure )
{
	SP_DPAlloc alloc( gXYZBenchmarkMetaInfo );
	return alloc.free( &structure, sizeof( structure ), eTypeXYZBuiltinMix );
}

int XYZBenchmarkPickle :: deepCopy( const XYZBuiltinMix_t * src, XYZBuiltinMix_t * dest )
{
	SP_DPAlloc alloc( gXYZBenchmarkMetaInfo );
	return alloc.deepCopy( src, sizeof( *src ), eTypeXYZBuiltinMix, dest, sizeof( *dest ) );
}


