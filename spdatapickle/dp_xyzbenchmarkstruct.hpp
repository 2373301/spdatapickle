/* dp_xyzbenchmarkstruct.hpp
   Generated by spxml2struct from F:\backup\spdatapickle\spdatapickle\benchmark.xml

   !!! DO NOT EDIT !!!

*/

#ifndef __dp_xyzbenchmarkstruct_hpp__
#define __dp_xyzbenchmarkstruct_hpp__

#include "spdatapickle/spdplib.hpp"

#ifdef __cplusplus
extern "C" {
#endif

enum {
	eTypeXYZSpeedMessage1SubMessage = eTypeSPDPUserDefine + 1,
	eTypeXYZSpeedMessage1,
	eTypeXYZBuiltinMix
};

typedef struct tagXYZSpeedMessage1SubMessage {
	int32_t mField1;
	int32_t mField2;
	int32_t mField3;
	char * mField15;
	char mField12;
	int64_t mField13;
	int64_t mField14;
	int64_t mField16;
	int32_t mField19;
	char mField20;
	char mField28;
	int32_t mField22;
	char mField23;
	char mField206;
	int32_t mField204;
	char * mField205;
	uint64_t mField207;
	uint64_t mField300;
} XYZSpeedMessage1SubMessage_t;

typedef struct tagXYZSpeedMessage1 {
	char * mField1;
	char * mField9;
	char * mField18;
	char mField80;
	char mField81;
	int32_t mField2;
	int32_t mField3;
	int32_t mField280;
	int32_t mField6;
	int64_t mField22;
	char * mField4;
	char mField59;
	char * mField7;
	int32_t mField16;
	int32_t mField130;
	char mField12;
	char mField17;
	char mField13;
	char mField14;
	int32_t mField104;
	int32_t mField100;
	int32_t mField101;
	char * mField102;
	char * mField103;
	int32_t mField29;
	char mField30;
	int32_t mField60;
	int32_t mField271;
	int32_t mField272;
	int32_t mField150;
	int32_t mField23;
	char mField24;
	int32_t mField25;
	XYZSpeedMessage1SubMessage_t mField15;
	char mField78;
	int32_t mField67;
	int32_t mField68;
	int32_t mField128;
	char * mField129;
	int32_t mField131;
} XYZSpeedMessage1_t;

typedef struct tagXYZBuiltinMix {
	SP_DPChar_t mChar;
	SP_DPInt16_t mInt16;
	SP_DPUInt16_t mUInt16;
	SP_DPInt32_t mInt32;
	SP_DPUInt32_t mUInt32;
	SP_DPInt64_t mInt64;
	SP_DPUInt64_t mUInt64;
	SP_DPFloat_t mFloat;
	SP_DPDouble_t mDouble;
	SP_DPString_t mString;
	SP_DPBuffer_t mBuffer;
	SP_DPStringList_t mStringList;
	SP_DPInt32List_t mInt32List;
	SP_DPUInt32List_t mUInt32List;
	SP_DPInt64List_t mInt64List;
	SP_DPUInt64List_t mUInt64List;
} XYZBuiltinMix_t;

typedef struct tagSP_DPMetaInfo SP_DPMetaInfo_t;
extern SP_DPMetaInfo_t * gXYZBenchmarkMetaInfo;

class SP_XmlStringBuffer;
class SP_DataPickle;

class XYZBenchmarkPickle {
public:
	XYZBenchmarkPickle( int pickleType );
	~XYZBenchmarkPickle();

	int pickle( XYZSpeedMessage1SubMessage_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, XYZSpeedMessage1SubMessage_t * structure );

	int pickle( XYZSpeedMessage1_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, XYZSpeedMessage1_t * structure );

	int pickle( XYZBuiltinMix_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, XYZBuiltinMix_t * structure );


public:
	static int freeFields( XYZSpeedMessage1SubMessage_t & structure );
	static int deepCopy( const XYZSpeedMessage1SubMessage_t * src, XYZSpeedMessage1SubMessage_t * dest );

	static int freeFields( XYZSpeedMessage1_t & structure );
	static int deepCopy( const XYZSpeedMessage1_t * src, XYZSpeedMessage1_t * dest );

	static int freeFields( XYZBuiltinMix_t & structure );
	static int deepCopy( const XYZBuiltinMix_t * src, XYZBuiltinMix_t * dest );


private:
	SP_DataPickle * mImpl;
};


#ifdef __cplusplus
}
#endif

#endif

